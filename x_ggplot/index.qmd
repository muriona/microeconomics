---
title: "Introdução a ggplot2"
subtitle: "Visualização em R"
author: "Prof. Mauricio Uriona Maldonado"
format:
  revealjs:
    theme: theme.scss
    transition: fade
    background-transition: fade
    highlight-style: ayu-mirage
    incremental: true
    scrollable: true
code-link: true
execute:
  echo: true
  freeze: auto
editor: visual
---

# `ggplot2`

## Carregando o ggplot2 dentro do tidyverse

```{r}
library(tidyverse)
```

## 3 Partes principais de um ggplot

::: columns
::: {.column width="45%"}
`ggplot` - cria a camada base

-   `geom_` é a geometria
-   `geom_point()`
-   `geom_line()`
-   `geom_bar()`
-   `geom_boxplot()`
-   `geom_?()`
:::

::: {.column width="55%"}
-   `aes` serve para informar os argumentos
    -   Dimensão horizontal (x)
    -   Dimensão vertical (y)
    -   Cores
    -   Formas
    -   Tamanhos
    -   Transparência
    -   Relações
:::
:::

------------------------------------------------------------------------

## Exemplo

```{r, eval = FALSE}
ggplot(data = <DATA>, mapping = aes(<MAPPINGS>)) + 
  <GEOM_FUNCTION>()
```

------------------------------------------------------------------------

```{r}
#| fig-width: 8
#| fig-height: 3


cars <- mtcars

cars %>% 
  ggplot(aes(x = mpg, y = hp, color = factor(cyl),
             size = disp)) +
  geom_point()
```

## Informe os dados

Diga ao `ggplot2` o mapeamento dos argumentos com `aes`, e depois o tipo de gráfico via `geom_`

::: columns
::: {.column width="45%" style="font-size: 20px"}
-   `geom_point()` - Points
-   `geom_dotplot()` - Dot plot
-   `geom_hline()` - Horizontal reference line
-   `geom_vline()` - Vertical reference line
-   `geom_boxplot()` - A box and whisker plot
-   `geom_density()` - Smoothed density estimates
-   `geom_errorbarh()` - Horizontal error bars
-   `geom_hex()` - Hexagonal heatmap of 2d bin counts
-   `geom_jitter()` - Jittered points
-   `geom_linerange()` - Vertical interval line
-   `geom_pointrange()` - Vertical point line
-   `geom_line()` - Connect observations line
:::

::: {.column width="55%" style="font-size: 20px"}
-   `geom_step()` - Connect observations via step lines
-   `geom_polygon()` - Polygons
-   `geom_segment()` - Line segment
-   `geom_ribbon()` - Ribbon plot
-   `geom_area()` - Area plot
-   `geom_rug()` - Rug plots in the margins
-   `geom_smooth()` - Smoothed conditional means
-   `geom_label()` - Label points with text
-   `geom_text()` - Add text
-   `geom_violin()` - Violin plot
-   `geom_sf()` - Visual sf objects
-   `geom_map()` - Plot map
-   `geom_qq_line()` - A quantile-quantile plot
-   `geom_histogram()` - Histogram plot
:::
:::

# [Gapminder dataset](https://cran.r-project.org/web/packages/gapminder/index.html)

## Sobre

Os dados do Gapminder fornecem valores para a esperança de vida, o PIB per capita e a população, a cada cinco anos, de 1952 a 2007, para 142 países.

```{r}
#| eval: false

#install.packages("gapminder")

gapminder_df <- gapminder::gapminder

glimpse(gapminder_df)
```

## Sobre

Os dados do Gapminder fornecem valores para a esperança de vida, o PIB per capita e a população, a cada cinco anos, de 1952 a 2007, para 142 países.

```{r}
#| echo: false

gapminder_df <- gapminder::gapminder

glimpse(gapminder_df)
```

## primeiro gráfico

```{r, fig.height = 4}
gapminder_df %>% 
  filter(country == "Malawi") %>% 
  ggplot(aes(x = year, y = lifeExp)) + #<<
  geom_line(colour = "#1380A1", size = 1) #<<
```

## `ggplot2`

```{r, fig.height = 4}
gapminder_df %>% 
  filter(country == "Malawi") %>% 
  ggplot(aes(x = year, y = lifeExp)) +
  geom_line(colour = "#1380A1", size = 1) +
  geom_point(size = 2) #<<
```

## `ggplot2`

```{r,  fig.height = 4}
gapminder_df %>%
  filter(country == "China" | country == "United States") %>% #<<
  ggplot(aes(x = year, y = lifeExp, colour = country)) +
  geom_line(size = 1)
```

## `ggplot2`

```{r,  fig.height = 4}
gapminder_df %>%
  filter(country == "China" | country == "United States") %>% 
  ggplot(aes(x = year, y = lifeExp, colour = country, 
             size = pop)) + #<<
  geom_point() +  
  theme_minimal() + 
  theme(panel.grid.major.x = element_blank(), 
        panel.grid.minor.x = element_blank()) 
```

## `ggplot2`

```{r, fig.height = 4}
bar_df <- gapminder_df %>%
  filter(year == 2007 & continent == "Africa") %>%
  arrange(desc(lifeExp)) %>%
  head(5)

(bars <- ggplot(bar_df, aes(x = country, y = lifeExp)) +
  geom_bar(stat = "identity"))
```

## `ggplot2`

```{r, fig.height = 4}
bar_df <- gapminder_df %>%
  filter(year == 2007 & continent == "Africa") %>%
  arrange(desc(lifeExp)) %>%
  head(5)

(bars <- ggplot(bar_df, aes(x = country, y = lifeExp)) +
  geom_col()) #<<
```

## Exemplo preparando dados

```{r}
#| echo: true

#Prepare data
grouped_bar_df <- gapminder_df %>%
  filter(year == 1967 | year == 2007) %>%
  select(country, year, lifeExp) %>%
  pivot_wider(names_from = "year", values_from = "lifeExp") %>%
  mutate(gap = `2007` - `1967`) %>%
  arrange(desc(gap)) %>%
  head(5) %>%
  pivot_longer(names_to = "year", values_to = "lifeExp", cols = `1967`:`2007`)


```

## Exemplo preparando dados

```{r, fig.height= 4, tidy = FALSE}
grouped_bars <- ggplot(grouped_bar_df, 
                       aes(x = country, 
                           y = lifeExp, 
                           fill = as.factor(year))) +
  geom_bar(stat="identity", position="dodge")

grouped_bars
```

## ggplot2

```{r, fig.height = 4}
hist_plot <- gapminder_df %>% 
  filter(year == 2007) %>% 
  ggplot(aes(x = lifeExp)) +
  geom_histogram(binwidth = 5, color = "white") #<<

hist_plot
```

## ggplot2

```{r, fig.height = 5}
hist_plot +
  labs(x = "Life Expectancy (Years)",
       y = "Count",
       title = "Life expectancy",
       subtitle = "Year = 2007",
       caption = "Source: Gapminder")
```

## ggplot2

```{r, eval = FALSE}
ggsave("life_exp_2007.png", hist_plot, 
       height = 4, width = 6, units = "in", dpi = 450)
```

![](life_exp_2007.png)

## Customizações ilimitadas

```{r}
#| eval: false
#| echo: true

theme(line, rect, text, title, aspect.ratio, axis.title, axis.title.x,
  axis.title.x.top, axis.title.x.bottom, axis.title.y, axis.title.y.left,
  axis.title.y.right, axis.text, axis.text.x, axis.text.x.top,
  axis.text.x.bottom, axis.text.y, axis.text.y.left, axis.text.y.right,
  axis.ticks, axis.ticks.x, axis.ticks.x.top, axis.ticks.x.bottom,
  axis.ticks.y, axis.ticks.y.left, axis.ticks.y.right, axis.ticks.length,
  axis.ticks.length.x, axis.ticks.length.x.top, axis.ticks.length.x.bottom,
  axis.ticks.length.y, axis.ticks.length.y.left, axis.ticks.length.y.right,
  axis.line, axis.line.x, axis.line.x.top, axis.line.x.bottom, axis.line.y,
  axis.line.y.left, axis.line.y.right, legend.background, legend.margin,
  legend.spacing, legend.spacing.x, legend.spacing.y, legend.key,
  legend.key.size, legend.key.height, legend.key.width, legend.text,
  legend.text.align, legend.title, legend.title.align, legend.position,
  legend.direction, legend.justification, legend.box, legend.box.just,
  legend.box.margin, legend.box.background, legend.box.spacing,
  panel.background, panel.border, panel.spacing, panel.spacing.x,
  panel.spacing.y, panel.grid, panel.grid.major, panel.grid.minor,
  panel.grid.major.x, panel.grid.major.y, panel.grid.minor.x,
  panel.grid.minor.y, panel.ontop, plot.background, plot.title,
  plot.subtitle, plot.caption, plot.tag, plot.tag.position, plot.margin,
  strip.background, strip.background.x, strip.background.y,
  strip.placement, strip.text, strip.text.x, strip.text.y,
  strip.switch.pad.grid, strip.switch.pad.wrap, ..., complete = FALSE,
  validate = TRUE)
```

## `ggplot2`

::: columns
::: {.column width="45%"}
Built in themes \* `theme_grey()` \# default \* `theme_bw()` \* `theme_minimal()` \* `theme_classic()`
:::

::: {.column width="55%"}
pacotes complementares \* `bbplot` \* `bbc_style()`

-   `urbnthemes()`
    -   `theme_urbn_print()`
-   `ggthemes`
    -   `theme_few()`
    -   `theme_excel()`
    -   `theme_economist()`
:::
:::

## `ggplot2`

```{r,  fig.height = 4}
gapminder_df %>%
  filter(country == "China" | country == "United States") %>% 
  ggplot(aes(x = year, y = lifeExp, colour = country)) +
  geom_line(size = 1) +
  theme_grey() #<<
```

## `ggplot2`

```{r,  fig.height = 4}
gapminder_df %>%
  filter(country == "China" | country == "United States") %>% 
  ggplot(aes(x = year, y = lifeExp, colour = country)) +
  geom_line(size = 1) +
  theme_bw() #<<
```

## `ggplot2`

```{r,  fig.height = 4}
gapminder_df %>%
  filter(country == "China" | country == "United States") %>% 
  ggplot(aes(x = year, y = lifeExp, colour = country)) +
  geom_line(size = 1) +
  theme_minimal() #<<
```

## `ggplot2`

```{r,  fig.height = 4}
gapminder_df %>%
  filter(country == "China" | country == "United States") %>% 
  ggplot(aes(x = year, y = lifeExp, colour = country)) +
  geom_line(size = 1) +
  theme_classic() #<<
```

## `ggplot2` - the economist

```{r,  fig.height = 4}
gapminder_df %>%
  filter(country == "China" | country == "United States") %>% 
  ggplot(aes(x = year, y = lifeExp, colour = country)) +
  geom_line(size = 1) +
  ggthemes::theme_economist_white() #<<
```

## `ggplot2` - theme_few

```{r,  fig.height = 4}
gapminder_df %>%
  filter(country == "China" | country == "United States") %>% 
  ggplot(aes(x = year, y = lifeExp, colour = country)) +
  geom_line(size = 1) +
  ggthemes::theme_few() #<<
```

## `ggplot2` theme_minimal

```{r,  fig.height = 4}
gapminder_df %>%
  filter(country == "China" | country == "United States") %>% 
  ggplot(aes(x = year, y = lifeExp, colour = country)) +
  geom_line(size = 1) +  
  geom_hline(yintercept = 0, size = 1, colour="#333333") +
  theme_minimal() + #<<
  theme(panel.grid.major.x = element_blank(), #<<
        panel.grid.minor.x = element_blank()) #<<
```

------------------------------------------------------------------------

# Muita informação disponível!

## `tidyverse` foca em dados `tidy`

-   Leitura de dados com `readr`
-   Manipulação com `tidyr`
-   Transformação com `dplyr`
-   Visualização com `ggplot2`

Próximos passos: - [R for Data Science book (gratis!)](https://r4ds.had.co.nz/)
